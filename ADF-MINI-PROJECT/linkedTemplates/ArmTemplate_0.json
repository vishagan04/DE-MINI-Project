{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-MINI-PROJECT"
		},
		"LS_sql_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_sql'"
		},
		"MongoDbAtlas1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDbAtlas1'"
		},
		"LS_blob_task_2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_blob_task_2'"
		},
		"LS_sql_task_2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_sql_task_2'"
		},
		"LS_sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ss-client-order.database.windows.net"
		},
		"LS_sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB-mini"
		},
		"LS_sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vishagan"
		},
		"MongoDbAtlas1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "test"
		},
		"LS_sql_task_2_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ss-client-order.database.windows.net"
		},
		"LS_sql_task_2_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DB-task-2"
		},
		"LS_sql_task_2_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "vishagan"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_sql_properties_typeProperties_server')]",
					"database": "[parameters('LS_sql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_sql_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_sql_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDbAtlas1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('MongoDbAtlas1_connectionString')]",
					"database": "[parameters('MongoDbAtlas1_properties_typeProperties_database')]",
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_blob_task_2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_blob_task_2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_sql_task_2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_sql_task_2_properties_typeProperties_server')]",
					"database": "[parameters('LS_sql_task_2_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_sql_task_2_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_sql_task_2_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Atlas_transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "transactions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDbAtlas1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Atlas_user')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDbAtlas1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "MongoDbAtlasCollection",
				"schema": [],
				"typeProperties": {
					"collection": "users"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDbAtlas1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_Prep_Joined_Transaction_User')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Prep",
					"table": "Transaction_user_details"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_Prep_Transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Prep",
					"table": "transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_Prep_user')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Prep",
					"table": "user_details"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_Reporting_Trans_User_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Reporting",
					"table": "Trans_User"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_Reporting_trans_User_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Reporting",
					"table": "Transaction_user_2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_transaction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAW",
					"table": "transactions_details"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_user')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-1"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAW",
					"table": "user_details"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Scraped_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_blob_task_2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-2"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "products_with_price.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "departmentCode",
						"type": "String"
					},
					{
						"name": "departmentName",
						"type": "String"
					},
					{
						"name": "discontinuedProductFlag1",
						"type": "String"
					},
					{
						"name": "categoryCode",
						"type": "String"
					},
					{
						"name": "categoryName",
						"type": "String"
					},
					{
						"name": "discontinuedProductFlag2",
						"type": "String"
					},
					{
						"name": "categoryCode1",
						"type": "String"
					},
					{
						"name": "categoryName1",
						"type": "String"
					},
					{
						"name": "searchCategoryCode",
						"type": "String"
					},
					{
						"name": "seriesCode",
						"type": "String"
					},
					{
						"name": "seriesName",
						"type": "String"
					},
					{
						"name": "minStandardUnitPrice",
						"type": "String"
					},
					{
						"name": "maxStandardUnitPrice",
						"type": "String"
					},
					{
						"name": "minPricePerPiece",
						"type": "String"
					},
					{
						"name": "maxPricePerPiece",
						"type": "String"
					},
					{
						"name": "brandCode",
						"type": "String"
					},
					{
						"name": "brandUrlCode",
						"type": "String"
					},
					{
						"name": "brandName",
						"type": "String"
					},
					{
						"name": "seriesStatus",
						"type": "String"
					},
					{
						"name": "catchCopy",
						"type": "String"
					},
					{
						"name": "minStandardDaysToShip",
						"type": "String"
					},
					{
						"name": "maxStandardDaysToShip",
						"type": "String"
					},
					{
						"name": "directCartType",
						"type": "String"
					},
					{
						"name": "priceCheckLessFlag",
						"type": "String"
					},
					{
						"name": "recommendFlag",
						"type": "String"
					},
					{
						"name": "volumeDiscountFlag",
						"type": "String"
					},
					{
						"name": "cValueFlag",
						"type": "String"
					},
					{
						"name": "stockItemFlag",
						"type": "String"
					},
					{
						"name": "displayStandardPriceFlag",
						"type": "String"
					},
					{
						"name": "discontinuedProductFlag",
						"type": "String"
					},
					{
						"name": "cadTypeList",
						"type": "String"
					},
					{
						"name": "comparisonSpecValueList",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_blob_task_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_scraped_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql_task_2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-2"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "raw",
					"table": "scraped_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql_task_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_cleaned_Scraped_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_sql_task_2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Task-2"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "Prep",
					"table": "Cleaned_Scraping_data"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_sql_task_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AT_to_DB_transaction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists [RAW].[transactions_details]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['amount']['$numberInt']"
										},
										"sink": {
											"name": "amount",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['date']['$date']['$numberLong']"
										},
										"sink": {
											"name": "date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['user']['$oid']"
										},
										"sink": {
											"name": "user",
											"type": "String"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Atlas_transaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_transaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Task - 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-29T05:11:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Atlas_transaction')]",
				"[concat(variables('factoryId'), '/datasets/DB_transaction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AT_to_DB_user')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "MongoDbAtlasSource",
								"batchSize": 100
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "drop table if exists [RAW].[user_details]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['_id']['$oid']"
										},
										"sink": {
											"name": "id"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "email"
										}
									},
									{
										"source": {
											"path": "$['password']"
										},
										"sink": {
											"name": "password"
										}
									}
								],
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Atlas_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DB_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Task - 1"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-28T10:03:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Atlas_user')]",
				"[concat(variables('factoryId'), '/datasets/DB_user')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Reporting_Trans_User_2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Task-1"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DB_Reporting_Trans_User_1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DB_Reporting_trans_User_2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "window1"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Name as string,",
						"          type as string,",
						"          amount as long",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 window(over(type),",
						"     desc(amount, true),",
						"     highest = max(amount)) ~> window1",
						"window1 filter(amount==highest) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DB_Reporting_Trans_User_1')]",
				"[concat(variables('factoryId'), '/datasets/DB_Reporting_trans_User_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_Reporting_Transaction_User_1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Task-1"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DB_Prep_Joined_Transaction_User",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DB_Reporting_Trans_User_1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          transaction_id as string,",
						"          transaction_name as string,",
						"          type as string,",
						"          amount as integer,",
						"          date as date,",
						"          user_id as string,",
						"          year as integer,",
						"          {Total Amount} as long,",
						"          email as string,",
						"          password as string,",
						"          Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 aggregate(groupBy(Name,",
						"          type),",
						"     amount = sum(amount)) ~> aggregate1",
						"aggregate1 sort(asc(Name, true)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DB_Prep_Joined_Transaction_User')]",
				"[concat(variables('factoryId'), '/datasets/DB_Reporting_Trans_User_1')]"
			]
		}
	]
}