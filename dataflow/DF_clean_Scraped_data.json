{
	"name": "DF_clean_Scraped_data",
	"properties": {
		"folder": {
			"name": "Task-2/Prep"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DB_scraped_data",
						"type": "DatasetReference"
					},
					"name": "DBScrapedData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DB_cleaned_Scraped_data",
						"type": "DatasetReference"
					},
					"name": "DBCleanedScrapedData"
				}
			],
			"transformations": [
				{
					"name": "SelectingRequiredColoumn"
				},
				{
					"name": "RemovingNullIntoZero"
				},
				{
					"name": "RemovingDuplicate"
				},
				{
					"name": "FIlterByRank"
				},
				{
					"name": "RemovingRankColomn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          departmentCode as string,",
				"          departmentName as string,",
				"          discontinuedProductFlag1 as string,",
				"          categoryCode as string,",
				"          categoryName as string,",
				"          discontinuedProductFlag2 as string,",
				"          categoryCode1 as string,",
				"          categoryName1 as string,",
				"          searchCategoryCode as string,",
				"          seriesCode as string,",
				"          seriesName as string,",
				"          minStandardUnitPrice as integer,",
				"          maxStandardUnitPrice as integer,",
				"          minPricePerPiece as string,",
				"          maxPricePerPiece as string,",
				"          brandCode as string,",
				"          brandUrlCode as string,",
				"          brandName as string,",
				"          seriesStatus as string,",
				"          catchCopy as string,",
				"          minStandardDaysToShip as integer,",
				"          maxStandardDaysToShip as integer,",
				"          directCartType as string,",
				"          priceCheckLessFlag as string,",
				"          recommendFlag as string,",
				"          volumeDiscountFlag as string,",
				"          cValueFlag as string,",
				"          stockItemFlag as string,",
				"          displayStandardPriceFlag as string,",
				"          discontinuedProductFlag as string,",
				"          cadTypeList as string,",
				"          comparisonSpecValueList as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DBScrapedData",
				"DBScrapedData select(mapColumn(",
				"          departmentName,",
				"          categoryName,",
				"          categoryName1,",
				"          seriesCode,",
				"          seriesName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          brandName,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectingRequiredColoumn",
				"RemovingRankColomn derive(minStandardUnitPrice = iifNull(minStandardUnitPrice, 0, minStandardUnitPrice),",
				"          maxStandardUnitPrice = iifNull(maxStandardUnitPrice, 0, maxStandardUnitPrice),",
				"          minStandardDaysToShip = iifNull(minStandardDaysToShip, 0, minStandardDaysToShip),",
				"          maxStandardDaysToShip = iifNull(maxStandardDaysToShip, 0, maxStandardDaysToShip)) ~> RemovingNullIntoZero",
				"SelectingRequiredColoumn window(over(seriesCode),",
				"     asc(seriesCode, true),",
				"     Rank = iif(seriesCode==lag(seriesCode, 1), \"true\", \"false\")) ~> RemovingDuplicate",
				"RemovingDuplicate filter(Rank==\"false\") ~> FIlterByRank",
				"FIlterByRank select(mapColumn(",
				"          departmentName,",
				"          categoryName,",
				"          categoryName1,",
				"          seriesCode,",
				"          seriesName,",
				"          minStandardUnitPrice,",
				"          maxStandardUnitPrice,",
				"          brandName,",
				"          minStandardDaysToShip,",
				"          maxStandardDaysToShip",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemovingRankColomn",
				"RemovingNullIntoZero sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DBCleanedScrapedData"
			]
		}
	}
}